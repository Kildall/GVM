@page "/compras"
@using GVM.Components
@using GVM.Data.ViewModels;
@using GVM.Data.Entidades;
@using Microsoft.EntityFrameworkCore;
@inherits AuthorizedComponentPage

<nav class="navbar mud-background container-fluid">
  <form class="container-fluid">
    <div class="input-group">
        <span class="input-group-text" id="basic-addon1"><MudIcon Icon="@Icons.Material.Filled.Search"></MudIcon></span>
        <input type="text" class="form-control" placeholder="Buscar..." aria-label="Buscar" aria-describedby="basic-addon1" @oninput="RealizarBusqueda">
    </div>
  </form>
</nav>

<h4>Compras realizadas:</h4>


@foreach (var compra in Compras)
{
    <ItemCompra Compra = "compra" />
}

@code {
    public List<CompraViewModel> Compras { get; set; } = new List<CompraViewModel>();

    public string txtBusqueda = string.Empty;
    List<CompraViewModel> resultadosBusqueda;

    [CascadingParameter]
    LoadingIndicator LoadingIndicator { get; set; }

    /* Muestra el indicador de carga,
    realiza una consulta a la base de datos para obtener una lista de compras, incluyendo las entidades relacionadas Distribuidor y Empleado,
    Mapea los resultados de la consulta a una lista de objetos CompraViewModel y
    Oculta el indicador de carga una vez que se han cargado los datos */

    protected override async Task  OnInitializedAsync()
    {
        LoadingIndicator.Show();

        List<Compra> listaCompras = await GVMContext.Compras.ToListAsync();

        Compras = listaCompras.Select(compra => new CompraViewModel
        {
            CompraId = compra.CompraId,
            Empleado = compra.Empleado,
            Distribuidor = compra.Distribuidor,
            Fecha = compra.Fecha,
            Monto = compra.Monto,
            Descripcion = compra.Descripcion
        }).ToList();

         LoadingIndicator.Hide();
    }

    //Realizar Busqueda - Pendiente
    public void RealizarBusqueda(ChangeEventArgs e)
    {
        
    }
}