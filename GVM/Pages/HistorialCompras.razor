@page "/historialcompras"
@using GVM.Data;
@using GVM.Data.DTOs;
@using GVM.Data.Entidades;
@using Blazorise;
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager _Navigation
@inject GVMContext _GVMContext;
@inherits ComponentBase;

<nav class="navbar bg-body-tertiary container-fluid">
  <form class="container-fluid">
    <div class="input-group">
            <span class="input-group-text" id="basic-addon1"><i class="fas fa-search"></i></span>
      <input type="text" class="form-control" placeholder="Buscar..." aria-label="Buscar" aria-describedby="basic-addon1" @oninput="RealizarBusqueda">
    </div>
  </form>
</nav>

<h4>Compras realizadas:</h4>


@foreach (var compra in compras)
{
    <div class="bubble">
        <p><strong>Fecha:</strong> @compra.fecha</p>
        <p><strong>Descripcion:</strong> @compra.descripcion</p>
        <p><strong>Distribuidor:</strong> @compra.distribuidor.Nombre</p>
        <p><strong>Empleado:</strong> @compra.empleado.Nombre</p>
        <p><strong>Monto:</strong> $@compra.monto</p>
        <div class="button-container">
            <Button Class="bubble-button" Color="Color.Primary" Clicked="() => EditarCompra(compra.compraId)">
                <span class="oi oi-pencil"></span> Editar
            </Button>
        </div>
    </div>
}

@code {
    [Parameter]
    public List<CompraViewModel> compras { get; set; } = new List<CompraViewModel>();

    public string txtBusqueda = string.Empty;
    List<CompraViewModel> resultadosBusqueda;

    [CascadingParameter]
    LoadingIndicator loadingIndicator { get; set; }

    /* Muestra el indicador de carga,
    realiza una consulta a la base de datos para obtener una lista de compras, incluyendo las entidades relacionadas Distribuidor y Empleado,
    Mapea los resultados de la consulta a una lista de objetos CompraViewModel y
    Oculta el indicador de carga una vez que se han cargado los datos*/

    protected override async Task OnInitializedAsync()
    {
        await loadingIndicator.Show();

        List<Compra> listaCompras = await _GVMContext.Compras.Include(c => c.Distribuidor).Include(c => c.Empleado).ToListAsync();

        compras = listaCompras.Select(compra => new CompraViewModel
            {
                compraId = compra.CompraId,
                empleado = compra.Empleado,
                distribuidor = compra.Distribuidor,
                fecha = compra.Fecha,
                monto = compra.Monto,
                descripcion = compra.Descripcion
            }).ToList();

        await loadingIndicator.Hide();
        }

    public void EditarCompra(int CompraId)
    {
        _Navigation.NavigateTo($"editarcompra/{CompraId}");
    }

    //Realizar Busqueda - Pendiente

    public void RealizarBusqueda(ChangeEventArgs e)
    {

    }
}